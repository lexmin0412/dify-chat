# This configuration is designed to be used as /etc/nginx/conf.d/default.conf
# It should replace the default server configuration
# This is a template file that will be processed by envsubst at runtime

server {
    listen 80;
    server_name localhost;

    # 设置根目录
    root /usr/share/nginx/html;
    index index.html index.htm;

    # 启用 gzip 压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    # 静态文件缓存策略 - 优先匹配
    location /dify-chat/static/ {
        root /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # 运行时配置端点
    location /dify-chat/config.js {
        add_header Content-Type application/javascript;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        access_log off;
        return 200 'window.APP_CONFIG = {
            PUBLIC_DEBUG_MODE: "${PUBLIC_DEBUG_MODE}",
            PUBLIC_APP_API_BASE: "${PUBLIC_APP_API_BASE}",
            PUBLIC_DIFY_PROXY_API_BASE: "${PUBLIC_DIFY_PROXY_API_BASE}"
        };';
    }

    # React 应用路由配置 - 处理 /dify-chat 前缀
    location /dify-chat/ {
        alias /usr/share/nginx/html/dify-chat/;
        index index.html;

        # 首先尝试直接访问文件，然后尝试目录，最后回退到 index.html
        try_files $uri $uri/ /dify-chat/index.html;

        # 设置安全头
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    }

    # 处理 /dify-chat 不带斜杠的情况
    location = /dify-chat {
        return 302 $scheme://$http_host/dify-chat/;
    }

    # 处理所有路径，如果不存在则回退到 index.html (SPA 路由)
    location / {
        try_files $uri $uri/ /index.html;
    }

    # 健康检查端点
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # 错误页面
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}